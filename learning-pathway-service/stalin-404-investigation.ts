import puppeteer from 'puppeteer';

async function stalin404Investigation() {
  console.log('üî¥ STALIN\'S 404 INVESTIGATION');
  console.log('Testing the exact URLs that are failing...\n');
  
  const suspiciousUrls = [
    'https://www.futurelearn.com/courses/ai-driven-process-improvement',
    'https://www.edx.org/course/predictive-analytics-for-business', 
    'https://www.edx.org/course/automated-testing-with-artificial-intelligence'
  ];
  
  const browser = await puppeteer.launch({
    headless: true,
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  });
  
  try {
    const page = await browser.newPage();
    
    for (const url of suspiciousUrls) {
      console.log(`üîç TESTING: ${url}`);
      
      try {
        const response = await page.goto(url, { 
          waitUntil: 'domcontentloaded',
          timeout: 10000 
        });
        
        const statusCode = response?.status() || 0;
        const pageTitle = await page.title();
        
        // Check for soft 404 indicators
        const pageContent = await page.evaluate(() => {
          const bodyText = document.body.textContent?.toLowerCase() || '';
          const title = document.title.toLowerCase();
          
          const soft404Indicators = [
            'page doesn\'t exist',
            'page not found',
            'error code: 404',
            'can\'t seem to find',
            'page may have moved',
            'mistyped the address'
          ];
          
          const isSoft404 = soft404Indicators.some(indicator => 
            bodyText.includes(indicator) || title.includes(indicator)
          );
          
          return {
            isSoft404,
            title,
            bodySnippet: bodyText.substring(0, 200)
          };
        });
        
        console.log(`   HTTP Status: ${statusCode}`);
        console.log(`   Page Title: "${pageTitle}"`);
        console.log(`   Soft 404: ${pageContent.isSoft404 ? '‚ùå YES' : '‚úÖ NO'}`);
        if (pageContent.isSoft404) {
          console.log(`   Content: "${pageContent.bodySnippet}..."`);
        }
        console.log('');
        
      } catch (error: any) {
        console.log(`   ‚ùå FAILED: ${error.message}`);
        console.log('');
      }
    }
    
    console.log('üî¥ STALIN\'S ANALYSIS:');
    console.log('These URLs are being generated by our system but don\'t exist!');
    console.log('We need INTELLIGENT soft 404 detection!');
    
  } catch (error) {
    console.error('‚ùå Investigation failed:', error);
  } finally {
    await browser.close();
  }
}

stalin404Investigation().catch(console.error);